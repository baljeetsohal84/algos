{"ast":null,"code":"var _jsxFileName = \"/Users/baljeetsingh/Desktop/software/s2020-djma/algo_interact/frontend/src/components/HelpButton/HelpButton.jsx\";\nimport React from \"../../../node_modules/react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport \"./HelpButton.css\";\nimport { ListGroupItem } from \"react-bootstrap\";\n\nconst HelpButton = props => {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const showModal = () => {\n    setIsOpen(true);\n  };\n\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n\n  return React.createElement(\"div\", {\n    class: \"row pt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-success\",\n    onClick: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"?\"), React.createElement(Modal, {\n    show: isOpen,\n    onHide: hideModal,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    class: \"mHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    class: \"display-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.mTitle))), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Left Buttons\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Graph Settings\"), \": Alter the color and size of all the nodes or links in the graph.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Algorithm Settings\"), \": \", props.algoDesc), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Nodes & Links\"), \": \", props.nLinkDesc), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.nodeList), props.nListDesc), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, props.rButtons), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.b1), props.b1Desc), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.b2), props.b2Desc))));\n};\n\nexport default HelpButton;","map":{"version":3,"sources":["/Users/baljeetsingh/Desktop/software/s2020-djma/algo_interact/frontend/src/components/HelpButton/HelpButton.jsx"],"names":["React","Modal","ListGroup","ListGroupItem","HelpButton","props","isOpen","setIsOpen","useState","showModal","hideModal","mTitle","algoDesc","nLinkDesc","nodeList","nListDesc","rButtons","b1","b1Desc","b2","b2Desc"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,6BAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AAEA,OAAO,kBAAP;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,KAAK,CAACQ,QAAN,CAAe,KAAf,CAA5B;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACvBF,IAAAA,SAAS,CAAC,IAAD,CAAT;AACA,GAFD;;AAIA,QAAMG,SAAS,GAAG,MAAM;AACpBH,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAFD;;AAGA,SACI;AAAK,IAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,OAAO,EAAEE,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAQI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAEH,MADV;AAEI,IAAA,MAAM,EAAEI,SAFZ;AAGI,IAAA,IAAI,EAAC,IAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,KAAK,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAa;AAAI,IAAA,KAAK,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBL,KAAK,CAACM,MAA7B,CAAb,CADF,CALF,EAQE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAH,uEAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAH,QAAyCN,KAAK,CAACO,QAA/C,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,QAAoCP,KAAK,CAACQ,SAA1C,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASR,KAAK,CAACS,QAAf,CAAH,EAAqCT,KAAK,CAACU,SAA3C,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,KAAK,CAACW,QAAX,CANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASX,KAAK,CAACY,EAAf,CAAH,EAA+BZ,KAAK,CAACa,MAArC,CAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASb,KAAK,CAACc,EAAf,CAAH,EAA+Bd,KAAK,CAACe,MAArC,CARJ,CARF,CARJ,CADJ;AA8BH,CAxCD;;AA0CA,eAAehB,UAAf","sourcesContent":["import React from \"../../../node_modules/react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nimport \"./HelpButton.css\";\nimport { ListGroupItem } from \"react-bootstrap\";\n\nconst HelpButton = (props) => {\n    const [isOpen, setIsOpen] = React.useState(false);\n\n    const showModal = () => {\n     setIsOpen(true);\n    };\n\n    const hideModal = () => {\n        setIsOpen(false);\n    };\n    return (\n        <div class=\"row pt-3\">\n            <button \n              type=\"button\" \n              class=\"btn btn-success\" \n              onClick={showModal}\n              >\n              ?\n            </button>\n            <Modal \n                show={isOpen} \n                onHide={hideModal} \n                size=\"lg\"\n                >\n              <Modal.Header class=\"mHeader\">\n                <Modal.Title><h1 class=\"display-4\">{props.mTitle}</h1></Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                  <h2>Left Buttons</h2>\n                  <p><strong>Graph Settings</strong>: Alter the color and size of all the nodes or links in the graph.</p>\n                  <p><strong>Algorithm Settings</strong>: {props.algoDesc}</p>\n                  <p><strong>Nodes & Links</strong>: {props.nLinkDesc}</p>\n                  <p><strong>{props.nodeList}</strong>{props.nListDesc}</p>\n                  <h2>{props.rButtons}</h2>\n                  <p><strong>{props.b1}</strong>{props.b1Desc}</p>\n                  <p><strong>{props.b2}</strong>{props.b2Desc}</p>\n              </Modal.Body>\n            </Modal>\n        </div>\n    );\n};\n\nexport default HelpButton;"]},"metadata":{},"sourceType":"module"}