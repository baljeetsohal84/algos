{"ast":null,"code":"var _jsxFileName = \"/Users/baljeetsingh/Desktop/software/s2020-djma/algo_interact/frontend/src/components/React-D3-Graph/Graph/link/Link.jsx\";\nimport React from \"react\";\n/**\n * Link component is responsible for encapsulating link render.\n * @example\n * const onClickLink = function(source, target) {\n *      window.alert(`Clicked link between ${source} and ${target}`);\n * };\n *\n * const onRightClickLink = function(source, target) {\n *      window.alert(`Right clicked link between ${source} and ${target}`);\n * };\n *\n * const onMouseOverLink = function(source, target) {\n *      window.alert(`Mouse over in link between ${source} and ${target}`);\n * };\n *\n * const onMouseOutLink = function(source, target) {\n *      window.alert(`Mouse out link between ${source} and ${target}`);\n * };\n *\n * <Link\n *     d=\"M1...\"\n *     source=\"idSourceNode\"\n *     target=\"idTargetNode\"\n *     markerId=\"marker-small\"\n *     strokeWidth=1.5\n *     stroke=\"green\"\n *     className=\"link\"\n *     opacity=1\n *     mouseCursor=\"pointer\"\n *     onClickLink={onClickLink}\n *     onRightClickLink={onRightClickLink}\n *     onMouseOverLink={onMouseOverLink}\n *     onMouseOutLink={onMouseOutLink} />\n */\n\nexport default class Link extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleOnClickLink = () => this.props.onClickLink && this.props.onClickLink(this.props.source, this.props.target);\n\n    this.handleOnRightClickLink = event => this.props.onRightClickLink && this.props.onRightClickLink(event, this.props.source, this.props.target);\n\n    this.handleOnMouseOverLink = () => this.props.onMouseOverLink && this.props.onMouseOverLink(this.props.source, this.props.target);\n\n    this.handleOnMouseOutLink = () => this.props.onMouseOutLink && this.props.onMouseOutLink(this.props.source, this.props.target);\n  }\n\n  render() {\n    const lineStyle = {\n      strokeWidth: this.props.strokeWidth,\n      stroke: this.props.stroke,\n      opacity: this.props.opacity,\n      fill: \"none\",\n      cursor: this.props.mouseCursor\n    };\n    const lineProps = {\n      className: this.props.className,\n      d: this.props.d,\n      onClick: this.handleOnClickLink,\n      onContextMenu: this.handleOnRightClickLink,\n      onMouseOut: this.handleOnMouseOutLink,\n      onMouseOver: this.handleOnMouseOverLink,\n      style: lineStyle\n    };\n\n    if (this.props.markerId) {\n      lineProps.markerEnd = `url(#${this.props.markerId})`;\n    }\n\n    const {\n      label,\n      id\n    } = this.props;\n    const textProps = {\n      dy: -1,\n      style: {\n        fill: this.props.fontColor,\n        fontSize: this.props.fontSize,\n        fontWeight: this.props.fontWeight\n      }\n    };\n    return React.createElement(\"g\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"path\", Object.assign({}, lineProps, {\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), label && React.createElement(\"text\", Object.assign({\n      style: {\n        textAnchor: \"middle\"\n      }\n    }, textProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"textPath\", {\n      href: `#${id}`,\n      startOffset: \"50%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, label)));\n  }\n\n}","map":{"version":3,"sources":["/Users/baljeetsingh/Desktop/software/s2020-djma/algo_interact/frontend/src/components/React-D3-Graph/Graph/link/Link.jsx"],"names":["React","Link","Component","handleOnClickLink","props","onClickLink","source","target","handleOnRightClickLink","event","onRightClickLink","handleOnMouseOverLink","onMouseOverLink","handleOnMouseOutLink","onMouseOutLink","render","lineStyle","strokeWidth","stroke","opacity","fill","cursor","mouseCursor","lineProps","className","d","onClick","onContextMenu","onMouseOut","onMouseOver","style","markerId","markerEnd","label","id","textProps","dy","fontColor","fontSize","fontWeight","textAnchor"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n/**\n * Link component is responsible for encapsulating link render.\n * @example\n * const onClickLink = function(source, target) {\n *      window.alert(`Clicked link between ${source} and ${target}`);\n * };\n *\n * const onRightClickLink = function(source, target) {\n *      window.alert(`Right clicked link between ${source} and ${target}`);\n * };\n *\n * const onMouseOverLink = function(source, target) {\n *      window.alert(`Mouse over in link between ${source} and ${target}`);\n * };\n *\n * const onMouseOutLink = function(source, target) {\n *      window.alert(`Mouse out link between ${source} and ${target}`);\n * };\n *\n * <Link\n *     d=\"M1...\"\n *     source=\"idSourceNode\"\n *     target=\"idTargetNode\"\n *     markerId=\"marker-small\"\n *     strokeWidth=1.5\n *     stroke=\"green\"\n *     className=\"link\"\n *     opacity=1\n *     mouseCursor=\"pointer\"\n *     onClickLink={onClickLink}\n *     onRightClickLink={onRightClickLink}\n *     onMouseOverLink={onMouseOverLink}\n *     onMouseOutLink={onMouseOutLink} />\n */\nexport default class Link extends React.Component {\n    /**\n     * Handle link click event.\n     * @returns {undefined}\n     */\n    handleOnClickLink = () => this.props.onClickLink && this.props.onClickLink(this.props.source, this.props.target);\n\n    /**\n     * Handle link right click event.\n     * @param {Object} event - native event.\n     * @returns {undefined}\n     */\n    handleOnRightClickLink = event =>\n        this.props.onRightClickLink && this.props.onRightClickLink(event, this.props.source, this.props.target);\n\n    /**\n     * Handle mouse over link event.\n     * @returns {undefined}\n     */\n    handleOnMouseOverLink = () =>\n        this.props.onMouseOverLink && this.props.onMouseOverLink(this.props.source, this.props.target);\n\n    /**\n     * Handle mouse out link event.\n     * @returns {undefined}\n     */\n    handleOnMouseOutLink = () =>\n        this.props.onMouseOutLink && this.props.onMouseOutLink(this.props.source, this.props.target);\n\n    render() {\n        const lineStyle = {\n            strokeWidth: this.props.strokeWidth,\n            stroke: this.props.stroke,\n            opacity: this.props.opacity,\n            fill: \"none\",\n            cursor: this.props.mouseCursor,\n        };\n\n        const lineProps = {\n            className: this.props.className,\n            d: this.props.d,\n            onClick: this.handleOnClickLink,\n            onContextMenu: this.handleOnRightClickLink,\n            onMouseOut: this.handleOnMouseOutLink,\n            onMouseOver: this.handleOnMouseOverLink,\n            style: lineStyle,\n        };\n\n        if (this.props.markerId) {\n            lineProps.markerEnd = `url(#${this.props.markerId})`;\n        }\n\n        const { label, id } = this.props;\n        const textProps = {\n            dy: -1,\n            style: {\n                fill: this.props.fontColor,\n                fontSize: this.props.fontSize,\n                fontWeight: this.props.fontWeight,\n            },\n        };\n\n        return (\n            <g>\n                <path {...lineProps} id={id} />\n                {label && (\n                    <text style={{ textAnchor: \"middle\" }} {...textProps}>\n                        <textPath href={`#${id}`} startOffset=\"50%\">\n                            {label}\n                        </textPath>\n                    </text>\n                )}\n            </g>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}