{"ast":null,"code":"var _jsxFileName = \"/Users/baljeetsingh/Desktop/software/s2020-djma/algo_interact/frontend/src/components/Learn/Learn.jsx\";\nimport React, { Component } from \"../../../node_modules/react\";\nimport Footer from \"../Footer/Footer\";\nimport LearnCard from \"../LearnCard/LearnCard\";\nimport \"./Learn.css\"; // The carousel:\n// https://www.npmjs.com/package/react-multi-carousel\n// npm install react-multi-carousel\n\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\"; // This responsive is for the carousel component.\n\nconst responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 3\n  }\n};\n\nclass Learn extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      class: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"d-flex p-5 bd-highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"d-flex p-5 bd-highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      class: \"display-3 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Welcome to the Learn Page!\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"d-flex p-2 bd-highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"pl-5 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \" \", React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Data Structures\"), \" \"))), React.createElement(Carousel, {\n      responsive: responsive,\n      containerClass: \"carousel-container\",\n      removeArrowOnDeviceType: [\"tablet\", \"mobile\"],\n      deviceType: this.props.deviceType,\n      dotListClass: \"custom-dot-list-style\",\n      itemClass: \"card-deck d-flex pl-5 pr-5 bd-highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(LearnCard, {\n      title: \"Graph\",\n      text: \"Graph is the non-linear data structure which is used to represent data networks.\",\n      image: \"/images/graphpicture.png\",\n      tab1title: \"Description\",\n      tab1text: React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"It consist of nodes and edges and sometimes we can say that nodes are vertices and edges are line or arc\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"It is used to show real time problems\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Graph can be used in social network sites like facebook linkedin etc.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Each nodes are contains information about data.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Each nodes are contains information about data.\")),\n      tab2title: \"Time Complexity\",\n      tab2text: \"Time complexity of graph is O(V+E) where V represent number of vertices \",\n      tab3image: \"Fun Facts\",\n      tab3text: \"Nowitzki was born in Germany and grew up playing tennis.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(LearnCard, {\n      title: \"Tree \",\n      text: \"Tree is non linear data structure where first node is called Root Node of the tree and then after other nodes are called subtree every tree can have multiple subtree and they can have also no any subtree but still is called tree data structure,  there are some points to be remember. \",\n      tab1title: \"Description\",\n      tab1text: React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"\\u2029\", React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Tree is the hieraricial data structure which an store data member in hierical manner\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Height of tree should be depend on subtree of the tree.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })),\n      tab2title: \"Time Complexity of Tree\",\n      tab2text: \"In general time complexity of tree will be O(h). it can be different operations. it can be also best and worst time  complexity.\",\n      image: \"/images/treepicture.png\",\n      tab1image: \"/images/treepicture.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(LearnCard, {\n      title: \"Linked List\",\n      text: \"Linked List is a linear data structure where all data can not be stored into congiguous memory location but then are  attached to all the nodes so that we can easy to maintain the list. its simply mean that the it is the list where we can store data member in different memory locations. it is the technic of improving of wasting of memory in the database or we can say  that to save the memory.\",\n      tab1title: \"Description\",\n      tab1text: \"-it saves the wasting of memory -it is easier to add, delte or change the data into database it can not use contiguous memory locations. -all the nodes are linked with reference link so that each node can be connected to each other and perform operations -Linked List can be of two types single linked list and double linked list. \",\n      tab2title: \"Average Time Complexity of Linked List\",\n      tab2text: \"O(n)\",\n      tab3title: \"Average Time Complexity of Linked List\",\n      tab3text: \"O(1)\",\n      image: \"/images/linkedlistpicture.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(LearnCard, {\n      title: \"Binary Search Tree\",\n      Text: \"kjhfsdhjkds\",\n      tab1title: \"Description\",\n      tab1text: \"hgfhjgshjfh\",\n      image: \"/images/binarysearchtreepic.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"d-flex pl-2 bd-highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"pl-5 pt-3 pb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \" \", React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Algorithms\"), \" \"))), React.createElement(Carousel, {\n      responsive: responsive,\n      containerClass: \"carousel-container\",\n      removeArrowOnDeviceType: [\"tablet\", \"mobile\"],\n      deviceType: this.props.deviceType,\n      dotListClass: \"custom-dot-list-style\",\n      itemClass: \"card-deck d-flex pl-5 pr-5 bd-highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(LearnCard, {\n      title: \"Breadth First Search\",\n      text: \"The Breadth first search is another fundamental search algorithm used to explore nodes and edges of a graph. It runs with a time complexity of o(v+e) and is often used as a building block in other algorithms.\",\n      tab1title: \"Description\",\n      tab1text: React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"\\u2029\", React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"The BFS algorithm is  particularly useful for one thing: finding the shortest path  on unsweighted graphs.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Height of tree should be depend on subtree of the tree.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })),\n      image: \"/images/braedth.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(LearnCard, {\n      title: \"Depth First Search\",\n      text: \"It uses stack to find the goal node .it goes deeper as depper of a node until goal is found then perform recursive tracking.\",\n      tab1title: \"Description\",\n      tab1text: \"Foe a graph, DFS gives minimum Spanning tree and the Shortest paths of all pairs.\",\n      image: \"/images/depthfirst.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(LearnCard, {\n      title: \"Dijkstra Algorithm\",\n      text: \"Description for third algorithm here.\",\n      image: \"/images/dijkstra.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(LearnCard, {\n      title: \"Tree Algorithm \",\n      text: \"Description for fourth algorithm here.\",\n      image: \"/images/treetraversal.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"container p-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Learn;","map":{"version":3,"sources":["/Users/baljeetsingh/Desktop/software/s2020-djma/algo_interact/frontend/src/components/Learn/Learn.jsx"],"names":["React","Component","Footer","LearnCard","Carousel","responsive","desktop","breakpoint","max","min","items","Learn","render","props","deviceType"],"mappings":"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","sourcesContent":["import React, { Component } from \"../../../node_modules/react\";\nimport Footer from \"../Footer/Footer\";\nimport LearnCard from \"../LearnCard/LearnCard\";\nimport \"./Learn.css\";\n\n// The carousel:\n// https://www.npmjs.com/package/react-multi-carousel\n// npm install react-multi-carousel\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\n\n// This responsive is for the carousel component.\nconst responsive = {\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 3,\n  },\n};\n\nclass Learn extends Component {\n  render() {\n    return (\n      <div class=\"box\">\n        <div class=\"d-flex p-5 bd-highlight\">\n          <div class=\"d-flex p-5 bd-highlight\">\n            <h5 class=\"display-3 text-center\">Welcome to the Learn Page!</h5>\n          </div>\n        </div>\n\n        <hr></hr>\n        {/** All the cards in the Data Structures and Algorithms\n         *    sections go to the Visualizer page when clicked.\n         *    Our intent is that for each respective structure,\n         *    a default one will be rendered.\n         */}\n        <div class=\"d-flex p-2 bd-highlight\">\n          <div class=\"pl-5 pb-2\">\n            <h2>\n              {\" \"}\n              <em>Data Structures</em>{\" \"}\n            </h2>\n          </div>\n        </div>\n        <Carousel\n          responsive={responsive}\n          containerClass=\"carousel-container\"\n          removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\n          deviceType={this.props.deviceType}\n          dotListClass=\"custom-dot-list-style\"\n          itemClass=\"card-deck d-flex pl-5 pr-5 bd-highlight\"\n        >\n          <LearnCard\n            title=\"Graph\"\n            text=\"Graph is the non-linear data structure which is used to represent data networks.\"\n            image=\"/images/graphpicture.png\"\n            tab1title=\"Description\"\n            tab1text={<ul><li>It consist of nodes and edges and sometimes we can say that nodes are vertices and edges are line or arc</li>\n                      <li>It is used to show real time problems</li>\n                      <li>Graph can be used in social network sites like facebook linkedin etc.</li>\n                      <li>Each nodes are contains information about data.</li>\n                      <li>Each nodes are contains information about data.</li>\n                    </ul>}\n            tab2title=\"Time Complexity\"\n            tab2text=\"Time complexity of graph is O(V+E) where V represent number of vertices \"\n            tab3image=\"Fun Facts\"\n            tab3text=\"Nowitzki was born in Germany and grew up playing tennis.\"\n          />\n\n          <LearnCard\n            title=\"Tree \"\n            text=\"Tree is non linear data structure where first node is called Root Node\n                of the tree and then after other nodes are called subtree every tree can have\n                multiple subtree and they can have also no any subtree but still is called tree data structure, \n                there are some points to be remember. \"\n            tab1title=\"Description\"\n            tab1text={<ul> <li>Tree is the hieraricial data structure which an store data member in hierical manner</li>\n                      <li>Height of tree should be depend on subtree of the tree.</li>\n                      <li></li>\n                      </ul>}\n            tab2title=\"Time Complexity of Tree\"\n            tab2text=\"In general time complexity of tree will be O(h). it can be different operations. it can be also best and worst time \n                      complexity.\"\n            image=\"/images/treepicture.png\"\n            tab1image=\"/images/treepicture.png\"\n          />\n\n          <LearnCard\n            title=\"Linked List\"\n            text=\"Linked List is a linear data structure where all data can not be stored into congiguous memory location but then are \n                  attached to all the nodes so that we can easy to maintain the list. its simply mean that the it is the list where we can store\n                  data member in different memory locations. it is the technic of improving of wasting of memory in the database or we can say \n                  that to save the memory.\"\n            tab1title=\"Description\"\n            tab1text=\"-it saves the wasting of memory\n                      -it is easier to add, delte or change the data into database\n                      it can not use contiguous memory locations.\n                      -all the nodes are linked with reference link so that each node can be connected to each other and perform operations\n                      -Linked List can be of two types single linked list and double linked list. \"\n            tab2title=\"Average Time Complexity of Linked List\"\n            tab2text=\"O(n)\"\n            tab3title=\"Average Time Complexity of Linked List\"\n            tab3text=\"O(1)\"\n            image=\"/images/linkedlistpicture.png\"\n          />\n\n          <LearnCard\n            title=\"Binary Search Tree\"\n            Text=\"kjhfsdhjkds\"\n            tab1title=\"Description\"\n            tab1text=\"hgfhjgshjfh\"\n            image=\"/images/binarysearchtreepic.png\"\n            />\n          \n        </Carousel>\n        <br></br>\n        <br></br>\n        <hr></hr>\n        <div class=\"d-flex pl-2 bd-highlight\">\n          <div class=\"pl-5 pt-3 pb-4\">\n            <h2>\n              {\" \"}\n              <em>Algorithms</em>{\" \"}\n            </h2>\n          </div>\n        </div>\n        <Carousel\n          responsive={responsive}\n          containerClass=\"carousel-container\"\n          removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\n          deviceType={this.props.deviceType}\n          dotListClass=\"custom-dot-list-style\"\n          itemClass=\"card-deck d-flex pl-5 pr-5 bd-highlight\"\n        >\n          <LearnCard\n            title=\"Breadth First Search\"\n            text=\"The Breadth first search is another fundamental search algorithm used to explore nodes and edges of a graph. It runs with a time complexity of o(v+e) and is often used as a building block in other algorithms.\"\n            tab1title=\"Description\"\n            tab1text={<ul> <li>The BFS algorithm is  particularly useful for one thing: finding the shortest path  on unsweighted graphs.</li>\n              <li>Height of tree should be depend on subtree of the tree.</li>\n              <li></li>\n              </ul>}\n            image=\"/images/braedth.png\"\n\n          />\n          <LearnCard\n            title=\"Depth First Search\"\n            text=\"It uses stack to find the goal node .it goes deeper as depper of a node until goal is found then perform recursive tracking.\"\n            tab1title=\"Description\"\n            tab1text=\"Foe a graph, DFS gives minimum Spanning tree and the Shortest paths of all pairs.\"\n            image=\"/images/depthfirst.png\"\n            \n          />\n          <LearnCard\n            title=\"Dijkstra Algorithm\"\n            text=\"Description for third algorithm here.\"\n            image=\"/images/dijkstra.png\"\n          />\n\n          <LearnCard\n            title=\"Tree Algorithm \"\n            text=\"Description for fourth algorithm here.\"\n            image=\"/images/treetraversal.png\"\n            \n          />\n        </Carousel>\n        <div class=\"container p-5\"></div>\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Learn;\n"]},"metadata":{},"sourceType":"module"}